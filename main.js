(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e,n,o,r,i,u){var c=o.handleCardClick,a=r.deleteClickHandler,l=i.likeClickHandler,s=u.resetLikeClickHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this._name=e.name,this._link=e.link,this._cardSelector=n,this._handleCardClick=c,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__image"),this._likeButton=this._element.querySelector(".element__like-button"),this._elementName=this._element.querySelector(".element__name"),this._deleteButton=this._element.querySelector(".element__delete-button"),this._likeCounter=this._element.querySelector(".element__like-number"),this._numberOfLikes=e.likes,this._ownerId=e.owner._id,this._deleteClickHandler=a,this._likeClickHandler=l,this._resetlikeClickHandler=s,this._isLiked=this._data.likes.map((function(e){return e._id})).includes("11ab6d8f551dd307035c1b67")}var n,o;return n=t,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"createCard",value:function(){return this._addListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._elementName.textContent=this._name,this._likeCounter.textContent=this._numberOfLikes.length.toString(),this._isLiked&&this._likeButton.classList.add("element__like-button_active"),"11ab6d8f551dd307035c1b67"===this._ownerId&&(this._deleteButton.style.display="grid"),this._element}},{key:"_getId",value:function(){return this._data._id}},{key:"_addListeners",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(){e._deleteClickHandler(e._getId())})),this._likeButton.addEventListener("click",(function(){e._likeHandler(e._getId()),console.log("first point",e._isLiked)})),this._cardImage.addEventListener("click",(function(t){e._handleCardClick(t)}))}},{key:"_likeHandler",value:function(){console.log("I'm pushed"),console.log("I'm pushed, and here is all we have",this._data.likes),console.log("old like",this._isLiked),console.log("second point",this._isLiked),this._isLiked?(console.log("Iam going to reset like"),this._resetlikeClickHandler(this._getId()),console.log("third point",this._isLiked)):(console.log("Iam going to set like"),this._likeClickHandler(this._getId()))}},{key:"handleElementDelete",value:function(){this._element.remove(),this._element=null}},{key:"handleSetLike",value:function(e){console.log("forth point",this._isLiked),console.log("after set",e.likes.length.toString()),this._likeCounter.textContent=e.likes.length.toString(),this._likeButton.classList.add("element__like-button_active");var t=e.likes.map((function(e){return e._id})).includes("11ab6d8f551dd307035c1b67");console.log("liked or not(should be liked",t),this._isLiked=!0}},{key:"handleResetLike",value:function(e){console.log("after reset",e.likes.length.toString()),this._likeCounter.textContent=e.likes.length.toString(),this._likeButton.classList.remove("element__like-button_active"),e.likes.map((function(e){return e._id})).includes("11ab6d8f551dd307035c1b67"),this._isLiked=!1}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._submitButton=t.submitButton,this._popupIsInvalid=t.popupIsInvalid,this._input=t.input,this._inputError=t.inputError,this._error=t.error,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._input)),this._button=this._form.querySelector(this._submitButton)}var t,o;return t=e,(o=[{key:"_showInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputError),t.textContent=e.validationMessage,t.classList.add(this._error)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputError),t.classList.remove(this._error),t.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_disableButton",value:function(){this._button.classList.add(this._popupIsInvalid),this._button.setAttribute("disabled","disabled")}},{key:"_enableButton",value:function(){this._button.classList.remove(this._popupIsInvalid),this._button.removeAttribute("disabled")}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function r(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var i=function(){function e(t,n){var o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),c(this,"_closeOnClick",(function(e){(e.target.classList.contains("popup_opened")&&e.target.closest(".popup__container")!=n._popupContainer||e.target.closest(".popup__close-button")==n._popupCloseButton)&&n.close()})),this._popup=document.querySelector(t),this._popupCloseButton=this._popup.querySelector(".popup__close-button"),this._popupContainer=this._popup.querySelector(".popup__container")}var t,n;return t=e,(n=[{key:"open",value:function(){var e=this;this._popup.classList.remove("popup_fade-out"),this._popup.classList.add("popup_fade-in"),setTimeout((function(){e._popup.classList.add("popup_opened")}),10),document.addEventListener("keydown",(function(t){e._handleEscClose(t)}))}},{key:"close",value:function(){var e=this;this._popup.classList.remove("popup_fade-in"),this._popup.classList.add("popup_fade-out"),setTimeout((function(){e._popup.classList.remove("popup_opened")}),400),document.removeEventListener("keydown",(function(e){_handleEscClose(e)}))}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){e._closeOnClick(t)}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=p(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function h(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(u,e);var t,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(o);if(r){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupCaption=t._popup.querySelector(".popup__caption"),t}return t=u,(n=[{key:"open",value:function(e){this._popupImage.src=e.link,this._popupImage.alt=e.name,this._popupCaption.textContent=e.name,f(_(u.prototype),"open",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=k(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},v.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function w(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return O(e)}function O(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(u,e);var t,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(o);if(r){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function u(e,t){var n,o,r,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),c=function(e){e.preventDefault(),n._submitFormHandler(n._getInputValues())},(r="_submitFormHandlerFunction")in(o=O(n=i.call(this,e)))?Object.defineProperty(o,r,{value:c,enumerable:!0,configurable:!0,writable:!0}):o[r]=c,n._submitFormHandler=t,n._form=n._popup.querySelector(".popup__form"),n._inputList=n._popup.querySelectorAll(".popup__input"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){this._form.addEventListener("submit",this._submitFormHandlerFunction),v(S(u.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._form.reset(),v(S(u.prototype),"close",this).call(this)}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function j(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function L(e,t,n){return t&&j(e.prototype,t),n&&j(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function E(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var P=L((function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),E(this,"getUserInfo",(function(){return{userName:o._userName.textContent,userJob:o._userJob.textContent}})),E(this,"setUserInfo",(function(e){o._userName.textContent=e.name,o._userJob.textContent=e.about})),this._userName=document.querySelector(t),this._userJob=document.querySelector(n)}));function I(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var q=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t,this._token=n,this._headers={"Content-type":"application/json",Authorization:this._token}}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards/"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}},{key:"getProfile",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}},{key:"addProfile",value:function(e){var t={name:e.surname,about:e.job};return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}},{key:"addCard",value:function(e){var t={name:e.name,link:e.link};return fetch("".concat(this._url,"/cards/"),{method:"POST",headers:this._headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}},{key:"setLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}},{key:"resetLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}},{key:"addAvatar",value:function(e){var t={avatar:e.link};return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка")}))}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function R(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=x(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},T.apply(this,arguments)}function x(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}function H(e,t){return H=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},H(e,t)}function D(e,t){if(t&&("object"===B(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return A(e)}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&H(e,t)}(u,e);var t,n,o,r,i=(o=u,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(o);if(r){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return D(this,e)});function u(e,t){var n,o,r,c,a=t.submitDeletionHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),c=function(e){e.preventDefault(),n._submitDeletionHandler()},(r="_submitDeletionHandlerFunction")in(o=A(n=i.call(this,e)))?Object.defineProperty(o,r,{value:c,enumerable:!0,configurable:!0,writable:!0}):o[r]=c,n._submitDeletionHandler=a,n}return t=u,(n=[{key:"setEventListeners",value:function(){this._popup.addEventListener("submit",this._submitDeletionHandlerFunction),T(N(u.prototype),"setEventListeners",this).call(this)}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a),F=new q("https://mesto.nomoreparties.co/v1/cohort-43","13e0d01a-3631-45a5-b3a6-1a7f87295049"),J={submitButton:".popup__save",popupIsInvalid:"popup__save_disabled",input:".popup__input",inputError:".popup__input_type_error",error:".error"},U=document.querySelector(".profile__edit-button"),z=document.querySelector(".popup__form_profile"),M=z.querySelector('input[name="surname"]'),G=z.querySelector('input[name="job"]'),K=document.querySelector(".profile__add-button"),Q=document.querySelector(".popup__form_add"),W=new C(".popup_profile",(function(e){z.querySelector(J.submitButton).textContent="Сохранение...",F.addProfile(e).then((function(e){ee.setUserInfo(e),W.close()})).catch((function(e){console.log(e)})).finally((function(){setTimeout((function(){z.querySelector(J.submitButton).textContent="Сохранить"}),400)}))})),X=document.querySelector(".popup__form_avatar"),Y=document.querySelector(".profile__avatar-edit-button"),Z=document.querySelector(".profile__avatar"),$=new C(".popup_avatar",(function(e){X.querySelector(J.submitButton).textContent="Сохранение...",F.addAvatar(e).then((function(e){document.querySelector(".profile__avatar").src=e.avatar,$.close()})).catch((function(e){console.log(e)})).finally((function(){setTimeout((function(){X.querySelector(J.submitButton).textContent="Сохранить"}),400)}))})),ee=new P(".profile__name",".profile__bio");X.querySelector(J.submitButton).textContent="Сохранить",Z.addEventListener("mouseover",(function(){Y.style.display="block"})),Z.addEventListener("mouseout",(function(){Y.style.display="none"})),Z.addEventListener("click",(function(){ie[X.name].toggleButtonState(),$.open()})),$.setEventListeners(),F.getInitialCards().then((function(e){oe.renderItems(e.reverse())})).catch((function(e){console.log(e)})),F.getProfile().then((function(e){document.querySelector(".profile__name").textContent=e.name,document.querySelector(".profile__bio").textContent=e.about,document.querySelector(".profile__avatar").src=e.avatar})).catch((function(e){console.log(e)})),W.setEventListeners(),U.addEventListener("click",(function(){ie[z.name].toggleButtonState(),W.open();var e=ee.getUserInfo();M.value=e.userName,G.value=e.userJob})),K.addEventListener("click",(function(){ie[Q.name].toggleButtonState(),re.open()}));var te=new y(".popup_zoom");function ne(e){var n=new t(e,".item-template",{handleCardClick:function(){te.open(e)}},{deleteClickHandler:function(e){console.log("cardId:",e);var t=new V(".popup_delete",{submitDeletionHandler:function(){console.log("i am here"),F.deleteCard(e).then((function(){t.close(),n.handleElementDelete()})).catch((function(e){console.log(e)}))}});t.setEventListeners(),t.open()}},{likeClickHandler:function(e){F.setLike(e).then((function(e){n.handleSetLike(e)})).catch((function(e){console.log(e)}))}},{resetLikeClickHandler:function(e){F.resetLike(e).then((function(e){n.handleResetLike(e)})).catch((function(e){console.log(e)}))}});return n.createCard()}te.setEventListeners();var oe=new i({renderer:function(e){oe.addItem(ne(e))}},".elements"),re=new C(".popup_add",(function(e){Q.querySelector(J.submitButton).textContent="Сохранение...",F.addCard(e).then((function(e){oe.addItem(ne(e)),re.close()})).catch((function(e){console.log(e)})).finally((function(){setTimeout((function(){Q.querySelector(J.submitButton).textContent="Сохранить"}),400)}))}));re.setEventListeners();var ie={};!function(e){Array.from(document.querySelectorAll(".popup__form")).forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()}));var n=new o(e,t);ie[t.name]=n,n.enableValidation()}))}(J)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,